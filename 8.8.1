create a dynamic SP for to create excel export funcionality.
below code is to create excel header and data manually but i want to create excel data and header as per user choice so create an
input table to choose number from which we can pass input column names and then we can create SP according to that table 
to create column name and fill there data.

-- exec [dbo].[spGetEmployeeListWithBankExport] 'FirstName  asc','','','','','','','','','','','0',1,null

ALTER PROCEDURE [dbo].[spGetEmployeeListWithBankExport]
(
	@OrderBy varchar(1000), 	
	@EmployeeCode nvarchar(20),	
	@EmployeeName nvarchar(100),
	@Designation nvarchar(100),
	@DepartmentName nvarchar(100),
	@EmailAddress varchar(100),
	@Username nvarchar(50),	
	@EmployeeGroupName nvarchar(100),	
	@Status nvarchar(20),
	@ComplianceStatus nvarchar(20),
	@IsDelete nvarchar(1),
	@employeeIds nvarchar(50), -- Vijay 13

	@ViewerId int,	
	@TotalCount int out
)
AS     
BEGIN
	SET NOCOUNT ON;

	declare @IsLineManager bit;
	declare @DepartmentId int;
	declare @IsAdmin bit;
	declare @Select varchar(8000);
	declare @ColList varchar(8000);
	declare @Where varchar(8000);
	declare @i int; 
	declare @i2 int;
	declare @tmp varchar(8000);
	declare @dec varchar(8000);
	declare @f varchar(8000);
	declare @d varchar(8000);
	declare @Symbol char(2);
	declare @SQL varchar(8000);
	declare @Sort varchar(8000);
	declare @strLen int;
		
	DECLARE @SQLString NVARCHAR(4000)
	DECLARE @ParmDefinition NVARCHAR(4000)
	DECLARE @IntVariable INT
	DECLARE @Lastlname varchar(1000)

	SELECT 
		@IsAdmin = CASE WHEN R.RoleName='Admin' THEN 1 ELSE 0 END 
	FROM Employees AS E 
		LEFT JOIN Roles AS R ON R.RoleId = E.RoleId 
	WHERE E.EmployeeId= @ViewerId

	SELECT @IsLineManager=ISNULL(IsLineManager,0) FROM Employees WHERE EmployeeId = @ViewerId

	;WITH CTE AS (SELECT EmployeeId,SUM(CAST(Split.c.value('.', 'VARCHAR(100)') AS INT)) AS TotalScore FROM(
	SELECT EmployeeId,CAST ('<M>' + REPLACE(Score, ',', '</M><M>') + '</M>' AS XML) AS Score FROM(
	SELECT FilledId,EmployeeId,QuestionId,Type,REPLACE(Score,',-5','') AS Score,FilledBy,CreatedDate FROM
	(select FilledId,EmployeeId,QuestionId,REPLACE(Type,'|',',') AS Type, REPLACE(Score,'|',',') AS Score,FilledBy,CreatedDate from PDRFilledDetail) A)B
	)AS C CROSS APPLY Score.nodes ('/M') AS Split(C)
	GROUP BY EmployeeId)

	SELECT EmployeeId,TotalScore INTO #tempEmpTotalPDRScore FROM CTE

	set @Select = 'SELECT DISTINCT EmployeeId,EmployeeCode,FirstName,MiddleName,
									LastName,BirthDate,Department,Designation,
									Department,LineManagerName,NINumber,type,
									JoiningDate,Address,GPhCNo,NonMedicalPescriber,HomeTelephone
									Email,SmartcardNo,Username1,EmployeeGroupName,
									Status,ComplianceStatus,Question,GPHCRegistrationExpiryDate,
									DBSRegistrationExpiryDate,DBSNo,ContractorCode,

									RegionId,CoverApproverGroupIds,
									Gender,Mobile,Extension,ReviewDate,LeavingDate,HomeEmail,ReportSystem,CheckedOn,
									TeamIds,ViewTeamIds,HourPerWeek,HourPerDay,IsLineManager,ClinicianTypeId,IsValidGPHCRegistration,
									GPHCRegistrationCheckedOn,GHPCNMC_NA,ECName1,ECHomeTelephone1,ECWorkTelephone1,ECRelationship1,ECAddress1,
									ECName2,ECHomeTelephone2,ECWorkTelephone2,ECRelationship2,ECAddress2,
									RoleId,EmployeeGroupId,CompanyId,IsVatRegistered,VatRegistrationNumber,PaymentMethodId,IsFinanceController,

									BankName,BankAddress,BankAccountName,BankAccountNo,BankAccShortCode,
									IsBankNameModify,IsBankAccountNoModify,IsBankAccountNameModify,IsBankAccShortCodeModify,IsBankAddressModify,

									PFDType,REPLACE(Score,'',-5'','''') AS PDRScore,A.TotalScore,FilledDate 
					FROM 
						(SELECT E.EmployeeId as EmployeeId,ISNULL(E.EmployeeCode,0) AS EmployeeCode, '		
	set @Select = @Select + ' 	ISNULL(E.RegionId,'''') AS RegionId ,'
	set @Select = @Select + ' 	ISNULL(E.CoverApproverGroupIds,'''') AS CoverApproverGroupIds ,'
	set @Select = @Select + ' 	ISNULL(E.Gender,'''') AS Gender ,'
	set @Select = @Select + ' 	ISNULL(E.Mobile,'''') AS Mobile ,'
	set @Select = @Select + ' 	ISNULL(E.Extension,'''') AS Extension ,'
	set @Select = @Select + ' 	ISNULL(E.ReviewDate,'''') AS ReviewDate ,'
	set @Select = @Select + ' 	ISNULL(E.LeavingDate,'''') AS LeavingDate ,'
	set @Select = @Select + ' 	ISNULL(E.HomeTelephone,'''') AS HomeTelephone ,'
	set @Select = @Select + ' 	ISNULL(E.HomeEmail,'''') AS HomeEmail ,'
	set @Select = @Select + ' 	ISNULL(E.ReportSystem,'''') AS ReportSystem ,'
	set @Select = @Select + ' 	ISNULL(E.CheckedOn,'''') AS CheckedOn ,'
	set @Select = @Select + ' 	ISNULL(E.HourPerWeek,''0'') HourPerWeek ,'
	set @Select = @Select + ' 	ISNULL(E.HourPerDay,''0'') AS HourPerDay ,'
	set @Select = @Select + ' 	ISNULL(E.TeamIds,'''') AS TeamIds ,'
	set @Select = @Select + ' 	ISNULL(E.ViewTeamIds,'''') AS ViewTeamIds ,'
	set @Select = @Select + ' 	ISNULL(E.IsLineManager,'''') AS IsLineManager ,'
	set @Select = @Select + ' 	ISNULL(E.ClinicianTypeId,'''') AS ClinicianTypeId ,'
	set @Select = @Select + ' 	ISNULL(E.IsValidGPHCRegistration,'''') AS IsValidGPHCRegistration ,'
	set @Select = @Select + ' 	ISNULL(E.GPHCRegistrationCheckedOn,'''') AS GPHCRegistrationCheckedOn ,'
	set @Select = @Select + ' 	ISNULL(E.GHPCNMC_NA,'''') AS GHPCNMC_NA ,'
	set @Select = @Select + ' 	ISNULL(E.ECName1,'''') AS ECName1 ,'
	set @Select = @Select + ' 	ISNULL(E.ECHomeTelephone1,'''') AS ECHomeTelephone1 ,'
	set @Select = @Select + ' 	ISNULL(E.ECWorkTelephone1,'''') AS ECWorkTelephone1 ,'
	set @Select = @Select + ' 	ISNULL(E.ECRelationship1,'''') AS ECRelationship1 ,'
	set @Select = @Select + ' 	ISNULL(E.ECAddress1,'''') AS ECAddress1 ,'
	set @Select = @Select + ' 	ISNULL(E.ECName2,'''') AS ECName2 ,'
	set @Select = @Select + ' 	ISNULL(E.ECHomeTelephone2,'''') AS ECHomeTelephone2 ,'
	set @Select = @Select + ' 	ISNULL(E.ECWorkTelephone2,'''') AS ECWorkTelephone2 ,'
	set @Select = @Select + ' 	ISNULL(E.ECRelationship2,'''') AS ECRelationship2 ,'
	set @Select = @Select + ' 	ISNULL(E.ECAddress2,'''') AS ECAddress2 ,'
	set @Select = @Select + ' 	ISNULL(E.RoleId,'''') AS RoleId ,'
	set @Select = @Select + ' 	ISNULL(E.EmployeeGroupId,'''') AS EmployeeGroupId ,'
	set @Select = @Select + ' 	ISNULL(E.CompanyId,'''') AS CompanyId ,'
	set @Select = @Select + ' 	ISNULL(E.IsVatRegistered,'''') AS IsVatRegistered ,'
	set @Select = @Select + ' 	ISNULL(E.VatRegistrationNumber,'''') AS VatRegistrationNumber ,'
	set @Select = @Select + ' 	ISNULL(E.PaymentMethodId,'''') AS PaymentMethodId ,'
	set @Select = @Select + ' 	ISNULL(E.IsFinanceController,'''') AS IsFinanceController ,'


	set @Select = @Select + ' 	ISNULL(E.FirstName,'''') AS FirstName ,'	
	set @Select = @Select + ' 	ISNULL(E.MiddleName,'''') AS MiddleName ,'	
	set @Select = @Select + ' 	ISNULL(E.LastName,'''') AS LastName ,'	
	set @Select = @Select + ' 	case when ISNULL(E.BirthDate,'''') = '''' then '''' else convert(varchar(12),E.BirthDate,103) end as BirthDate,'	
	set @Select = @Select + ' 	ISNULL(E.DepartmentName,'''') Department, '		
	set @Select = @Select + ' 	ISNULL(E.Designation,'''') Designation,'	
	set @Select = @Select + ' 	ISNULL(LI.FirstName,'''') + '' '' + ISNULL(LI.LastName,'''') as LineManagerName ,'		
	set @Select = @Select + ' 	ISNULL(E.NINumber,'''') NINumber,'	
	set @Select = @Select + ' 	ISNULL(E.type,'''') type,'	
	set @Select = @Select + ' 	case when ISNULL(E.JoiningDate,'''') = '''' then '''' else convert(varchar(12),E.JoiningDate,103) end as JoiningDate,'	
	set @Select = @Select + ' 	ISNULL(E.Address,'''') Address,'	
	set @Select = @Select + ' 	ISNULL(E.GPhCNo,'''') GPhCNo,'	
	set @Select = @Select + ' 	case when isnull(E.NonMedicalPescriber,''0'') = 0 then ''No'' else ''Yes'' end as NonMedicalPescriber,'	
	set @Select = @Select + ' 	ISNULL(E.EmailAddress,'''') Email, '	
	set @Select = @Select + ' 	ISNULL(E.SmartcardNo,'''') SmartcardNo,'	
	set @Select = @Select + ' 	ISNULL(E.UserName,'''') Username1, '			
	set @Select = @Select + ' 	ISNULL(EG.GroupName,'''') EmployeeGroupName, '	
	set @Select = @Select + ' 	ISNULL(E.StatusName,'''') Status, '		
	set @Select = @Select + ' 	Cast(ISNULL(E.GPHCRegistrationExpiryDate,'''') as varchar(20)) GPHCRegistrationExpiryDate, '	
	set @Select = @Select + ' 	Cast(ISNULL(E.DBSRegistrationExpiryDate,'''') as varchar(20)) DBSRegistrationExpiryDate, '
	set @Select = @Select + ' 	ISNULL(E.DBSNo,'''') DBSNo, '
	set @Select = @Select + ' 	ISNULL(E.ContractorCode,'''') ContractorCode, '
	set @Select = @Select + ' 	ISNULL(E.BankName,'''') AS BankName ,'
	set @Select = @Select + ' 	ISNULL(E.BankAddress,'''') AS BankAddress ,'
	set @Select = @Select + ' 	ISNULL(E.BankAccountName,'''') AS BankAccountName ,'
	set @Select = @Select + ' 	ISNULL(E.BankAccountNo,'''') AS BankAccountNo ,'
	set @Select = @Select + ' 	ISNULL(E.BankAccShortCode,'''') AS BankAccShortCode ,'

	set @Select = @Select + ' 	(case when DATEDIFF(day, E.ModifyBankDate, GETDATE()) < 45 then (case when E.ModifyBankFields like ''%BankName%'' then ''True'' else ''False'' end) else ''False'' end) IsBankNameModify, '
	set @Select = @Select + ' 	(case when DATEDIFF(day, E.ModifyBankDate, GETDATE()) < 45 then (case when E.ModifyBankFields like ''%BankAccountNo%'' then ''True'' else ''False'' end) else ''False'' end) as IsBankAccountNoModify, '
	set @Select = @Select + ' 	(case when DATEDIFF(day, E.ModifyBankDate, GETDATE()) < 45 then (case when E.ModifyBankFields like ''%BankAccountName%'' then ''True'' else ''False'' end) else ''False'' end) as IsBankAccountNameModify, '
	set @Select = @Select + ' 	(case when DATEDIFF(day, E.ModifyBankDate, GETDATE()) < 45 then (case when E.ModifyBankFields like ''%BankAccShortCode%'' then ''True'' else ''False'' end) else ''False'' end) as IsBankAccShortCodeModify, '
	set @Select = @Select + ' 	(case when DATEDIFF(day, E.ModifyBankDate, GETDATE()) < 45 then (case when E.ModifyBankFields like ''%BankAddress%'' then ''True'' else ''False'' end) else ''False'' end) as IsBankAddressModify, '

	set @Select = @Select + ' 	dbo.fncGetEmployeeComplianceStatus(E.EmployeeId,'''') ComplianceStatus,PQ.Question,REPLACE(PFD.Type,''|'','','') AS PFDType, REPLACE(PFD.Score,''|'','','') AS Score,C.TotalScore,PFD.CreatedDate AS FilledDate '		
	set @Select = @Select + ' 	FROM Employees AS E	'
	set @Select = @Select + ' 	LEFT JOIN EmployeeGroups AS EG ON EG.GroupId = E.EmployeeGroupId '
	set @Select = @Select + ' 	LEFT JOIN Employees AS LI ON E.LineManagerId = LI.EmployeeId 
								LEFT JOIN PDRFilledDetail PFD ON PFD.EmployeeId = E.EmployeeId
								LEFT JOIN PDRQuestion PQ ON PQ.QuestionId = PFD.QuestionId 
								LEFT JOIN PDRQuestionOption PQO ON PQO.QuestionId = PQ.QuestionId 	
								LEFT JOIN #tempEmpTotalPDRScore C ON C.EmployeeId = E.EmployeeId'
	
	if @IsDelete<>''
	begin
		if @IsDelete='0'
		begin
			set @Select = @Select + ' 	WHERE (E.IsDelete IS NULL OR E.IsDelete = 0) AND E.STATUSID <> 2'		
		end
		else
		begin
			set @Select = @Select + ' 	WHERE E.IsDelete = 1 OR E.STATUSID = 2'
		end
	end
	else
	begin
		set @Select = @Select + ' 	WHERE (E.IsDelete IS NULL OR E.IsDelete = 0) AND E.STATUSID <> 2'		
	end
	
	if @IsAdmin <> 1
	begin
		if @IsLineManager = 1
		begin
			set @SELECT = @SELECT + ' and E.LineManagerId='+ convert(varchar,@ViewerId) + ''
		end
	end
	
	-- Vijay 13
	if @employeeIds <>''
	begin
		set @SELECT = @SELECT + ' 	and E.EmployeeId in  (SELECT splitdata FROM fnSplitString(''' + convert(varchar,@employeeIds) + ''',''COMMA'')) '
	end 	
	
	if @EmployeeCode<>''
	begin
		set @Select = @Select + ' and E.EmployeeCode like ''%'+ convert(varchar,@EmployeeCode) +'%'' '
	end 	
	if @EmployeeName<>''
	begin
		set @Select = @Select + ' and (RTRIM(LTRIM(E.FirstName)) + '' '' + RTRIM(LTRIM(E.LastName)) like ''%'+ convert(varchar,@EmployeeName) +'%'')'
	end
	
	if @Designation<>''
	begin
		set @Select = @Select + ' and E.Designation like ''%'+ convert(varchar,@Designation) +'%'' '
	end
	if @DepartmentName<>''
	begin
		set @Select = @Select + ' and E.DepartmentName like ''%'+ convert(varchar,@DepartmentName) +'%'' '
	end
	if @EmailAddress<>''
	begin
		set @Select = @Select + ' and E.EmailAddress like ''%'+ convert(varchar,@EmailAddress) +'%'' '
	end
	if @Username<>''
	begin			
		set @Select = @Select + ' and E.Username like ''%'+ convert(varchar,@Username) +'%'' '
	end
	if @EmployeeGroupName <> ''
	begin
		set @Select = @Select + ' and EG.GroupName like ''%' + convert(varchar,@EmployeeGroupName) + '%'' '
	end
	if @Status<>''
	begin			
		set @Select = @Select + ' and E.StatusName like ''%'+ convert(varchar,@Status) +'%'' '
	end
	if @ComplianceStatus <>''
	begin			
		set @Select = @Select + ' and (case when dbo.fncGetEmployeeComplianceStatus(E.EmployeeId,'''') = 1 then '
			set @Select = @Select + ' ''Compliant''  '
			set @Select = @Select + '      when dbo.fncGetEmployeeComplianceStatus(E.EmployeeId,'''') = 2 then '
			set @Select = @Select + ' ''Non-Compliant''  '
			set @Select = @Select + ' 	 when dbo.fncGetEmployeeComplianceStatus(E.EmployeeId,'''') = 3 then  '
			set @Select = @Select + ' ''About to Expire'' '
			set @Select = @Select + ' 	 when dbo.fncGetEmployeeComplianceStatus(E.EmployeeId,'''') = 4 then '
			set @Select = @Select + ' ''CFMM'' '
			set @Select = @Select + ' end) 	like ''%'+ convert(varchar,@ComplianceStatus) +'%''	'
	end
	 
	--print @Select
	SET @Select = @Select + ') A ' 

	set @SQLString = N'select  @LastlnameOUT = count(E.EmployeeId) '	
	set @SQLString = @SQLString + ' 	FROM Employees AS E	'
	set @SQLString = @SQLString + ' 	LEFT JOIN EmployeeGroups AS EG ON EG.GroupId = E.EmployeeGroupId '
	set @SQLString = @SQLString + ' 	LEFT JOIN Employees AS LI ON E.LineManagerId = LI.EmployeeId '

	if @IsDelete<>''
	begin
		if @IsDelete='0'
		begin
			set @SQLString = @SQLString + ' 	WHERE (E.IsDelete IS NULL OR E.IsDelete = 0) AND E.STATUSID <> 2'
		end
		else
		begin
			set @SQLString = @SQLString + ' 	WHERE E.IsDelete = 1 OR E.STATUSID = 2'
		end
	end
	else
	begin
		set @SQLString = @SQLString + ' 	WHERE (E.IsDelete IS NULL OR E.IsDelete = 0) AND E.STATUSID <> 2'
	end

	if @IsAdmin <> 1
	begin
		if @IsLineManager = 1
		begin
			set @SQLString = @SQLString + ' and E.LineManagerId='+ convert(varchar,@ViewerId) + ''
		end
	end

	-- Vijay 13
	if @employeeIds <>''
	begin
		set @SQLString = @SQLString + ' 	and E.EmployeeId in  (SELECT splitdata FROM fnSplitString(''' + convert(varchar,@employeeIds) + ''',''COMMA'')) '
	end 	

	if @EmployeeCode<>''
	begin
		set @SQLString = @SQLString + ' and E.EmployeeCode like ''%'+ convert(varchar,@EmployeeCode) +'%'' '
	end 	
	if @EmployeeName<>''
	begin
		set @SQLString = @SQLString + ' and (RTRIM(LTRIM(E.FirstName)) + '' '' + RTRIM(LTRIM(E.LastName)) like ''%'+ convert(varchar,@EmployeeName) +'%'')'
	end
	
	if @Designation<>''
	begin
		set @SQLString = @SQLString + ' and E.Designation like ''%'+ convert(varchar,@Designation) +'%'' '
	end
	if @DepartmentName<>''
	begin
		set @SQLString = @SQLString + ' and E.DepartmentName like ''%'+ convert(varchar,@DepartmentName) +'%'' '
	end
	if @EmailAddress<>''
	begin
		set @SQLString = @SQLString + ' and E.EmailAddress like ''%'+ convert(varchar,@EmailAddress) +'%'' '
	end
	if @Username<>''
	begin			
		set @SQLString = @SQLString + ' and E.Username like ''%'+ convert(varchar,@Username) +'%'' '
	end
	if @EmployeeGroupName <> ''
	begin
		set @SQLString = @SQLString + ' and EG.GroupName like ''%' + convert(varchar,@EmployeeGroupName) + '%'' '
	end
	if @Status<>''
	begin			
		set @SQLString = @SQLString + ' and E.StatusName like ''%'+ convert(varchar,@Status) +'%'' '
	end
	if @ComplianceStatus <>''
	begin			
		set @SQLString = @SQLString + ' and (case when dbo.fncGetEmployeeComplianceStatus(E.EmployeeId,'''') = 1 then '
			set @SQLString = @SQLString + ' ''Compliant''  '
			set @SQLString = @SQLString + '      when dbo.fncGetEmployeeComplianceStatus(E.EmployeeId,'''') = 2 then '
			set @SQLString = @SQLString + ' ''Non-Compliant''  '
			set @SQLString = @SQLString + ' 	 when dbo.fncGetEmployeeComplianceStatus(E.EmployeeId,'''') = 3 then  '
			set @SQLString = @SQLString + ' ''About to Expire'' '
			set @SQLString = @SQLString + ' 	 when dbo.fncGetEmployeeComplianceStatus(E.EmployeeId,'''') = 4 then '
			set @SQLString = @SQLString + ' ''CFMM'' '
			set @SQLString = @SQLString + ' end) 	like ''%'+ convert(varchar,@ComplianceStatus) +'%''	'
	end


	SET @ParmDefinition = N'@level int,@LastlnameOUT varchar(30) OUTPUT'
	SET @IntVariable = 35
	
	EXECUTE sp_executesql
	@SQLString,
	@ParmDefinition,
	@level = @IntVariable,
	@LastlnameOUT=@Lastlname OUTPUT
	set @TotalCount=@Lastlname

	exec(@Select) 
	PRINT @Select
	DROP TABLE #tempEmpTotalPDRScore
END
