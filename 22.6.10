        private void ProcessFiles(List<FileInfo> fileList)
        {
            try
            {
                var dailyActivityFile = fileList.FirstOrDefault(t => t.Name.ToUpper().Contains("Global".ToUpper()) && IsCsvFile(t));
                ProcessFile(dailyActivityFile, dailyActivitySheetName, "Daily Activity file not found.");
            }
            catch (Exception ex)
            {
                LogToErrorFile(ex.Message);
                StartConsoleWriting(ex.Message);
            }
        }

        private void ProcessFile(FileInfo file, string sheetName, string notFoundMessage)
        {
            try
            {
                if (file != null)
                {
                    var fileNameWithoutExtension = Path.GetFileNameWithoutExtension(file.Name);
                    if (fileNameWithoutExtension.Contains("Global"))
                    {
                        dailyActivitySheetName = fileNameWithoutExtension;
                        // sheetName = dailyActivitySheetName;
                        sheetName = "Call Stats Template";
                    }

                    if (!string.IsNullOrEmpty(sheetName) && sheetName.ToUpper().Contains(sheetName.ToUpper()))
                    {
                        string outputFilePath = CreateExcelForDailyPatientSiteFile(file, sheetName);
                        if (!string.IsNullOrEmpty(outputFilePath))
                        {
                            InsertIntoDatabase(outputFilePath, sheetName); // Insert data into database after creating Excel
                        }
                    }
                }
                else
                {
                    LogToErrorFile(notFoundMessage);
                    Console.WriteLine(notFoundMessage);
                }
            }
            catch (Exception ex)
            {
                LogToErrorFile(ex.Message);
            }
        }

        public string CreateExcelForDailyPatientSiteFile(FileInfo aAPCSRFile, string sheetName)
        {
            string outputFilePath = string.Empty;
            XSSFWorkbook workbook = null;
            try
            {
                string sourceFile = aAPCSRFile?.ToString() ?? string.Empty;
                outputFilePath = Path.Combine(exportDirectory, $"{sheetName}.xlsx");

                if (File.Exists(outputFilePath))
                {
                    // Open existing workbook
                    using (FileStream fs = new FileStream(outputFilePath, FileMode.Open, FileAccess.Read))
                    {
                        workbook = new XSSFWorkbook(fs);
                    }
                }
                else
                {
                    // Create new workbook
                    workbook = new XSSFWorkbook();
                }

                ISheet sheet = workbook.GetSheet(sheetName) ?? workbook.CreateSheet(sheetName); // Create or get sheet

                if (!string.IsNullOrEmpty(sourceFile))
                {
                    AppendDailyPatientSiteCsvData(sourceFile, sheet, workbook, sheetName); // Append data from CSV file into sheet
                }

                using (FileStream stream = new FileStream(outputFilePath, FileMode.Create, FileAccess.Write)) // Save the workbook to an XLSX file
                {
                    workbook.Write(stream);
                }

                Console.WriteLine(sheetName + "...csv file copied to XLSX successfully...");
            }
            catch (Exception ex)
            {
                LogToErrorFile(ex.Message);
                StartConsoleWriting(ex.Message);
            }
            finally
            {
                workbook?.Close();
            }
            return outputFilePath;
        }

        public void AppendDailyPatientSiteCsvData(string filePath, ISheet sheet, XSSFWorkbook workbook, string sheetName)
{
    try
    {
        XSSFCellStyle numberStyle = (XSSFCellStyle)workbook.CreateCellStyle();
        numberStyle.DataFormat = workbook.CreateDataFormat().GetFormat("General");

        XSSFCellStyle dateStyle = (XSSFCellStyle)workbook.CreateCellStyle();
        dateStyle.DataFormat = workbook.CreateDataFormat().GetFormat("dd-MM-yyyy");

        XSSFCellStyle timeStyle = (XSSFCellStyle)workbook.CreateCellStyle();
        timeStyle.DataFormat = workbook.CreateDataFormat().GetFormat("hh:mm:ss");

        using (TextFieldParser reader = new TextFieldParser(filePath))
        {
            reader.HasFieldsEnclosedInQuotes = true;
            reader.SetDelimiters("\t");

            int rowIndex = sheet.LastRowNum + 1; // Start appending from the last row
            bool headerCreated = rowIndex > 0;  // Check if the sheet already has rows

            while (!reader.EndOfData)
            {
                var valueLines = reader.ReadFields();
                if (headerCreated)
                {
                    CreateHeaderRow(sheet, numberStyle);
                    headerCreated = false;
                }
                else if (int.TryParse(valueLines[0].Split(' ')[0], out _)) // Check if the first part is numeric
                {
                    ProcessDataRows(sheet, rowIndex, valueLines, dateStyle, numberStyle, timeStyle);
                    rowIndex++;
                }
            }
        }
    }
    catch (Exception ex)
    {
        LogToErrorFile(ex.Message);
        StartConsoleWriting(ex.Message);
        throw;
    }
}
        //public async static void Uploadfiles1()
        //{
        //    string filePathToUpload = "C:\\Users\\vijaychoudhary\\Desktop\\Vijay\\Sample\\Call Stats Template.xlsx";
        //    string siteUrl = "https://gpslocums.sharepoint.com/sites/PowerBI"; // SharePoint site URL
        //    string username = "GPSLOCUMSLTD\\qxserviceaccount"; // SharePoint username
        //    string password = "RuthlessMagician2205!";
        //    try
        //    {
        //        OfficeDevPnP.Core.AuthenticationManager authMgr = new OfficeDevPnP.Core.AuthenticationManager();

        //        using (var ctx = authMgr.GetSharePointOnlineAuthenticatedContextTenant(siteUrl, username, password))
        //        {
        //            Web web = ctx.Web;
        //            ctx.Load(web);
        //            ctx.Load(web.Lists);
        //            ctx.ExecuteQueryRetry();
        //            List list = web.Lists.GetByTitle("D1");
        //            ctx.Load(list);
        //            ctx.ExecuteQueryRetry();
        //            Folder folder = list.RootFolder.EnsureFolder("Folder1");
        //            ctx.Load(folder);
        //            ctx.ExecuteQueryRetry();

        //            Folder folderToUpload = web.GetFolderByServerRelativeUrl(folder.ServerRelativeUrl);
        //            folderToUpload.UploadFile("Call Stats Template.xlsx", filePathToUpload, true);
        //            folderToUpload.Update();
        //            ctx.Load(folder);
        //            ctx.ExecuteQueryRetry();
        //            folderToUpload.EnsureProperty(f => f.ServerRelativeUrl);
        //            var serverRelativeUrl = folderToUpload.ServerRelativeUrl.TrimEnd('/') + '/' + "LargeFile.txt";



        //        }
        //    }
        //    catch (Exception ex)
        //    {
        //        System.Console.WriteLine("Exception occurred : " + ex.Message);
        //        System.Console.ReadLine();
        //    }
        //}

        public void ExampleMethod(string filePath)
        {
            try
            {
                string siteUrl = "https://gpslocums.sharepoint.com/sites/PowerBI"; // SharePoint site URL
                string username = "GPSLOCUMSLTD\\qxserviceaccount"; // SharePoint username
                string password = "RuthlessMagician2205!";

                SecureString securePassword = new SecureString();
                foreach (char c in password.ToCharArray())
                    securePassword.AppendChar(c);

                using (ClientContext context = new ClientContext(siteUrl))
                {
                    // Provide count and credentials for your SharePoint environment
                    context.Credentials = new System.Net.NetworkCredential(username, password);

                    // Get the SharePoint web  
                    string targetFolderUrl = "https://gpslocums-my.sharepoint.com/personal/qxserviceaccount_medsolhealthcare_com/_layouts/15/onedrive.aspx?view=0&id=%2Fpersonal%2Fqxserviceaccount%5Fmedsolhealthcare%5Fcom%2FDocuments%2FTest%20Phone%20BOT%20File";

                    // File details
                    string fileName = Path.GetFileName(filePath);
                    string targetFileUrl = $"{targetFolderUrl}/{fileName}";

                    // Read file content
                    byte[] fileContent = System.IO.File.ReadAllBytes(filePath);

                    // Upload file
                    FileCreationInformation newFile = new FileCreationInformation
                    {
                        Content = fileContent,
                        // Url = fileName,
                        Url = targetFileUrl,
                        Overwrite = false
                    };

                    List docs = context.Web.Lists.GetByTitle("Documents");
                    Microsoft.SharePoint.Client.File uploadFile = docs.RootFolder.Files.Add(newFile);
                    context.Load(uploadFile);
                    context.ExecuteQuery();

                    Console.WriteLine("File uploaded successfully to SharePoint.");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error uploading file to SharePoint: {ex.Message}");
                // Log the error or handle it as per your application's error handling strategy
            }
        }

        //public void ExampleMethod(string filePath)
        //{
        //    try
        //    {
        //        string siteUrl = "https://gpslocums.sharepoint.com/sites/PowerBI"; // SharePoint site URL
        //        string username = "GPSLOCUMSLTD\\qxserviceaccount"; // SharePoint username
        //        string password = "RuthlessMagician2205!";

        //        SecureString securePassword = new SecureString();
        //        foreach (char c in password.ToCharArray())
        //            securePassword.AppendChar(c);

        //        using (ClientContext context = new ClientContext("https://gpslocums.sharepoint.com/sites/PowerBI"))
        //        {
        //            // Provide count and credentials for your SharePoint environment
        //            context.Credentials = new System.Net.NetworkCredential(username, password);

        //            // Get the SharePoint web  
        //            string targetFolderUrl = "https://gpslocums-my.sharepoint.com/personal/qxserviceaccount_medsolhealthcare_com/_layouts/15/onedrive.aspx?view=0&id=%2Fpersonal%2Fqxserviceaccount%5Fmedsolhealthcare%5Fcom%2FDocuments%2FTest%20Phone%20BOT%20File";

        //            // File details
        //            //   string fileName = Path.GetFileName(filePath);
        //            string fileName = "Call Stats Template";
        //            string targetFileUrl = targetFolderUrl + "/" + fileName;
        //           // string filePath = importFilePath;
        //            // Read file content
        //            byte[] fileContent = System.IO.File.ReadAllBytes(filePath);

        //            // Upload file
        //            FileCreationInformation newFile = new FileCreationInformation
        //            {
        //                Content = fileContent,
        //                Url = targetFileUrl,
        //                Overwrite = true
        //            };

        //            List docs = context.Web.Lists.GetByTitle("Documents");
        //            Microsoft.SharePoint.Client.File uploadFile = docs.RootFolder.Files.Add(newFile);
        //            context.Load(uploadFile);
        //            context.ExecuteQuery();

        //            Console.WriteLine("File uploaded successfully to SharePoint.");

        //            // Web properties - Display the Title and URL for the web  
        //           // Console.WriteLine("Title: " + web.Title + "; URL: " + web.Url);
        //        }

        //        //using (ClientContext context = new ClientContext(siteUrl))
        //        //{
        //        //    context.Credentials = new SharePointOnlineCredentials(username, securePassword);

        //        //    // Provide the relative path within the SharePoint site where you want to upload the file

        //        //}
        //    }
        //    catch (Exception ex)
        //    {
        //        Console.WriteLine($"Error uploading file to SharePoint: {ex.Message}");
        //        // Log the error or handle it as per your application's error handling strategy
        //    }
        //}
        private void InsertIntoDatabase(string excelFilePath, string sheetName)
        {
            if (string.IsNullOrEmpty(sheetName))
            {
                LogToErrorFile("Sheet name is null or empty.");
                return;
            }

            try
            {
                using (SqlConnection connection = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString))
                {
                    connection.Open();

                    string insertQuery = @"INSERT INTO OutputFileDetails (Date, Agent, TimesheetOwner, TotalTalkingTime)
                                   VALUES (@Date, @Agent, @TimesheetOwner, @TotalTalkingTime)";

                    string checkExistenceQuery = @"SELECT COUNT(*) FROM OutputFileDetails
                                           WHERE Date = @Date AND Agent = @Agent AND TimesheetOwner = @TimesheetOwner AND TotalTalkingTime = @TotalTalkingTime";

                    using (SqlCommand insertCommand = new SqlCommand(insertQuery, connection))
                    using (SqlCommand checkCommand = new SqlCommand(checkExistenceQuery, connection))
                    {
                        using (var workbook = new XSSFWorkbook(File.Open(excelFilePath, FileMode.Open, FileAccess.Read)))
                        {
                            ISheet sheet = workbook.GetSheet(sheetName);

                            if (sheet == null)
                            {
                                LogToErrorFile($"Sheet '{sheetName}' not found in workbook.");
                                return;
                            }

                            for (int i = 1; i <= sheet.LastRowNum; i++)
                            {
                                var row = sheet.GetRow(i);
                                if (row == null)
                                {
                                    LogToErrorFile($"Row {i} is null.");
                                    continue;
                                }

                                DateTime date = (DateTime)row.GetCell(0).DateCellValue;
                                string agent = row.GetCell(1).StringCellValue;
                                string timesheetOwner = row.GetCell(2).StringCellValue;
                                string totalTalkingTime = row.GetCell(3).StringCellValue;

                                checkCommand.Parameters.Clear();
                                checkCommand.Parameters.AddWithValue("@Date", date);
                                checkCommand.Parameters.AddWithValue("@Agent", agent);
                                checkCommand.Parameters.AddWithValue("@TimesheetOwner", timesheetOwner);
                                checkCommand.Parameters.AddWithValue("@TotalTalkingTime", totalTalkingTime);

                                int rowCount = (int)checkCommand.ExecuteScalar();

                                if (rowCount == 0)
                                {
                                    insertCommand.Parameters.Clear();
                                    insertCommand.Parameters.AddWithValue("@Date", date);
                                    insertCommand.Parameters.AddWithValue("@Agent", agent);
                                    insertCommand.Parameters.AddWithValue("@TimesheetOwner", timesheetOwner);
                                    insertCommand.Parameters.AddWithValue("@TotalTalkingTime", totalTalkingTime);

                                    insertCommand.ExecuteNonQuery();
                                }
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                LogToErrorFile(ex.Message);
                StartConsoleWriting(ex.Message);
            }
        }
        public void LoadDailyPatientSiteCsvData(string filePath, ISheet sheet, XSSFWorkbook workbook, string sheetName)
        {
            try
            {
                XSSFCellStyle numberStyle = (XSSFCellStyle)workbook.CreateCellStyle();
                numberStyle.DataFormat = workbook.CreateDataFormat().GetFormat("General");

                XSSFCellStyle dateStyle = (XSSFCellStyle)workbook.CreateCellStyle();
                dateStyle.DataFormat = workbook.CreateDataFormat().GetFormat("dd-MM-yyyy");

                XSSFCellStyle timeStyle = (XSSFCellStyle)workbook.CreateCellStyle();
                timeStyle.DataFormat = workbook.CreateDataFormat().GetFormat("hh:mm:ss");

                using (TextFieldParser reader = new TextFieldParser(filePath))
                {
                    reader.HasFieldsEnclosedInQuotes = true;
                    reader.SetDelimiters("\t");

                    int rowIndex = 0;

                    while (!reader.EndOfData)
                    {
                        var valueLines = reader.ReadFields();
                        if (rowIndex == 0)
                        {
                            CreateHeaderRow(sheet, numberStyle);
                            rowIndex++;
                        }
                        else if (int.TryParse(valueLines[0].Split(' ')[0], out _)) // Check if the first part is numeric
                        {
                            ProcessDataRows(sheet, rowIndex, valueLines, dateStyle, numberStyle, timeStyle);
                            rowIndex++;
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                LogToErrorFile(ex.Message);
                StartConsoleWriting(ex.Message);
                throw;
            }
        }

        void CreateHeaderRow(ISheet sheet, XSSFCellStyle style)
        {
            try
            {
                // Create a new row at the top of the sheet for the header
                var headerRow = sheet.CreateRow(0);

                // Define the headers
                string[] headers = { "Date", "Agent", "TimesheetOwner", "Total Talking time" };

                // Loop through each header and create a cell in the header row
                for (int i = 0; i < headers.Length; i++)
                {
                    var cell = headerRow.CreateCell(i);
                    cell.SetCellValue(headers[i]); // Set the header text
                    cell.CellStyle = style; // Apply the style to the cell
                }
            }
            catch (Exception ex)
            {
                LogToErrorFile(ex.Message);
                StartConsoleWriting(ex.Message);
            }
        }


want to create output file in .csv format as of now it is in .xlsx
